# NavParams를 이용한 페이지간 데이터 전달
Angular 기초 폴더에 "1. Dom 객체 바인딩" 읽고 보자.


# 1. NavController의 Push, setRoot 메소드를 이용한 NavParams 전달
> NavController.push(page, params, opts)
>
> NavController.setRoot(page, params, opts)

params 파라미터에 JSON 데이터 형식으로 입력하면, 보여지는 페이지의 NavParams 객체로 전달된다.


## 예제
#### * page1 (첫번째 페이지)
> page1.html
> ~~~
> <ion-content padding>
>     <ion-input [(ngModel)]='email' type='email'></ion-input>
>     <button ion-button full (click)='login()'>Login</button>
> </ion-content>
> ~~~
> page1.ts
> ~~~
> export class HomePage {
>     email: string;
>     constructor(public navCtrl: NavController) {}
>     login() {
>         this.navCtrl.push(Page2, {email: this.email});
>     }
>}
> ~~~


#### * page2 (두번째 페이지)
> page2.html
> ~~~
> <ion-content>
>     <p> email : {{NavParams.get("email")}} </p>
> </ion-content>
> ~~~
> page2.ts
> ~~~
> export class Page2 {
>     constructor(public navCtrl: NavController, public navParams: NavParams) {
>       <~ 사용하기 위해서 constructor에서 navParams 를 받아야 한다.
>     }
> }
> ~~~



---
참고 : [https://ionicframework.com/docs/api/navigation/NavParams](https://ionicframework.com/docs/api/navigation/NavParams)
